#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>
#include <fcntl.h>
#include <sys/dispatch.h>
#include <sys/mman.h>
#include <shared_memory.h>

struct pid_data{
	pthread_mutex_t pid_mutex;
	pid_t pid;
};

int shared_memory_func(){

	struct pid_data pid;
	int test = shm_open("/sharedpid", O_RDWR, S_IRWXU);
	struct pid_data *ptr;
	ptr = mmap(0,sizeof(pid), PROT_READ | PROT_WRITE, MAP_SHARED, test, 0);

	ptr = &pid;

	pthread_mutexattr_t myattr;
	pthread_mutexattr_init(&myattr);
	pthread_mutexattr_setpshared(&myattr, PTHREAD_PROCESS_SHARED);
	pthread_mutex_init(&ptr->pid_mutex, &myattr);

	return 0;
}
